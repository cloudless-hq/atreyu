{
  "version": 3,
  "sources": ["../app/src/service-worker/start-worker.js", "../app/src/service-worker/start-worker-now.js"],
  "sourcesContent": ["export default async function startWorker ({ reloadAfterInstall, workerPath = '/build/service-worker.js', isModule } = {}) {\n  let regs\n  let firstStart = false\n  try {\n    regs = await navigator.serviceWorker.getRegistrations()\n  } catch (err) {\n    console.warn(err)\n    location.reload()\n  }\n  if (regs.length !== 1) {\n    console.log(regs.length + ' worker registrations', regs)\n  }\n\n  if (navigator.serviceWorker.controller && navigator.serviceWorker.controller.state) {\n    if (!navigator.serviceWorker.controller.state === 'activated') {\n      console.warn('worker is ' + navigator.serviceWorker.controller.state)\n    } else {\n      // todo: unify with getRegistrations logic\n      // move to top?\n      // return ?\n    }\n  }\n\n  let loaded = () => { console.log('worker restarted') }\n  navigator.serviceWorker.addEventListener('message', async e => {\n    if (e.data === '{\"worker\":\"active\"}') {\n      await navigator.serviceWorker.ready\n      console.log('ServiceWorker start', { reloadAfterInstall, firstStart })\n      if (firstStart && reloadAfterInstall) {\n        if (!window.location.search) {\n          window.location.reload()\n        } else {\n          window.location.href = window.location.search\n        }\n      } else {\n        loaded(reg)\n      }\n    } else if (e.data.startsWith('navigate:')) {\n      // Fox until safari support client.navigate()\n      const href = e.data.replace('navigate:', '')\n      console.log('navigating tab to ' + href)\n      window.location.href = href\n      // TODO handle logout, cleanup etc\n    }\n  })\n\n  let reg\n  if (regs.length === 0) {\n    firstStart = true\n    reg = await navigator.serviceWorker.register(workerPath, {\n      updateViaCache: 'all',\n      scope: '/',\n      type: isModule ? 'module' : undefined\n    })\n\n    console.log('ServiceWorker registred')\n    // navigator.serviceWorker.addEventListener('controllerchange', async () => {}) // this fired before worker was active on slow networks...\n    return new Promise(resolve => { loaded = resolve })\n  } else {\n    await navigator.serviceWorker.ready\n    // console.log('ServiceWorker ready, already installed')\n    reg = regs[0]\n    return regs[0]\n  }\n\n  // requires app installation\n  // reg.periodicSync.unregister('periodic waky waky')\n  // if (reg.periodicSync) {\n  //   try {\n  //     const tags = await reg.periodicSync.getTags()\n  //     if (!tags.includes('periodic waky waky')) {\n  //       await reg.periodicSync.register('periodic waky waky', {\n  //         minInterval: 30 * 60 * 1000 // 30 mins\n  //       })\n  //     }\n  //   } catch (err) {\n  //     console.log('Periodic Sync could not be registered!', err)\n  //   }\n  // }\n}\n", "import startWorker from './start-worker.js'\n\nstartWorker({ reloadAfterInstall: true, workerPath: './service-worker.js', isModule: true })\n"],
  "mappings": ";AAAA,eAAO,YAAoC,EAAE,oBAAoB,aAAa,4BAA4B,SAAS,IAAI,CAAC,GAAG;AACzH,MAAI;AACJ,MAAI,aAAa;AACjB,MAAI;AACF,WAAO,MAAM,UAAU,cAAc,iBAAiB;AAAA,EACxD,SAAS,KAAK;AACZ,YAAQ,KAAK,GAAG;AAChB,aAAS,OAAO;AAAA,EAClB;AACA,MAAI,KAAK,WAAW,GAAG;AACrB,YAAQ,IAAI,KAAK,SAAS,yBAAyB,IAAI;AAAA,EACzD;AAEA,MAAI,UAAU,cAAc,cAAc,UAAU,cAAc,WAAW,OAAO;AAClF,QAAI,CAAC,UAAU,cAAc,WAAW,UAAU,aAAa;AAC7D,cAAQ,KAAK,eAAe,UAAU,cAAc,WAAW,KAAK;AAAA,IACtE,OAAO;AAAA,IAIP;AAAA,EACF;AAEA,MAAI,SAAS,MAAM;AAAE,YAAQ,IAAI,kBAAkB;AAAA,EAAE;AACrD,YAAU,cAAc,iBAAiB,WAAW,OAAM,MAAK;AAC7D,QAAI,EAAE,SAAS,uBAAuB;AACpC,YAAM,UAAU,cAAc;AAC9B,cAAQ,IAAI,uBAAuB,EAAE,oBAAoB,WAAW,CAAC;AACrE,UAAI,cAAc,oBAAoB;AACpC,YAAI,CAAC,OAAO,SAAS,QAAQ;AAC3B,iBAAO,SAAS,OAAO;AAAA,QACzB,OAAO;AACL,iBAAO,SAAS,OAAO,OAAO,SAAS;AAAA,QACzC;AAAA,MACF,OAAO;AACL,eAAO,GAAG;AAAA,MACZ;AAAA,IACF,WAAW,EAAE,KAAK,WAAW,WAAW,GAAG;AAEzC,YAAM,OAAO,EAAE,KAAK,QAAQ,aAAa,EAAE;AAC3C,cAAQ,IAAI,uBAAuB,IAAI;AACvC,aAAO,SAAS,OAAO;AAAA,IAEzB;AAAA,EACF,CAAC;AAED,MAAI;AACJ,MAAI,KAAK,WAAW,GAAG;AACrB,iBAAa;AACb,UAAM,MAAM,UAAU,cAAc,SAAS,YAAY;AAAA,MACvD,gBAAgB;AAAA,MAChB,OAAO;AAAA,MACP,MAAM,WAAW,WAAW;AAAA,IAC9B,CAAC;AAED,YAAQ,IAAI,yBAAyB;AAErC,WAAO,IAAI,QAAQ,aAAW;AAAE,eAAS;AAAA,IAAQ,CAAC;AAAA,EACpD,OAAO;AACL,UAAM,UAAU,cAAc;AAE9B,UAAM,KAAK,CAAC;AACZ,WAAO,KAAK,CAAC;AAAA,EACf;AAgBF;;;AC7EA,YAAY,EAAE,oBAAoB,MAAM,YAAY,uBAAuB,UAAU,KAAK,CAAC;",
  "names": []
}
