{
  "version": 3,
  "sources": ["../app/build/deps/falcor-observable.js", "../app/src/falcor/service-worker-source.js"],
  "sourcesContent": ["function getAugmentedNamespace(n) {\n  if (n.__esModule) return n;\n  var f = n.default;\n\tif (typeof f == \"function\") {\n\t\tvar a = function a () {\n\t\t\tif (this instanceof a) {\n        return Reflect.construct(f, arguments, this.constructor);\n\t\t\t}\n\t\t\treturn f.apply(this, arguments);\n\t\t};\n\t\ta.prototype = f.prototype;\n  } else a = {};\n  Object.defineProperty(a, '__esModule', {value: true});\n\tObject.keys(n).forEach(function (k) {\n\t\tvar d = Object.getOwnPropertyDescriptor(n, k);\n\t\tObject.defineProperty(a, k, d.get ? d : {\n\t\t\tenumerable: true,\n\t\t\tget: function () {\n\t\t\t\treturn n[k];\n\t\t\t}\n\t\t});\n\t});\n\treturn a;\n}\n\nfunction symbolObservablePonyfill(root) {\n\tvar result;\n\tvar Symbol = root.Symbol;\n\n\tif (typeof Symbol === 'function') {\n\t\tif (Symbol.observable) {\n\t\t\tresult = Symbol.observable;\n\t\t} else {\n\t\t\tresult = Symbol('observable');\n\t\t\tSymbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n}\n\n/* global window */\n\nvar root;\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (typeof module !== 'undefined') {\n  root = module;\n} else {\n  root = Function('return this')();\n}\n\nvar result = symbolObservablePonyfill(root);\n\nvar es = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tdefault: result\n});\n\nvar require$$0 = /*@__PURE__*/getAugmentedNamespace(es);\n\nconst symbolError$1 = Symbol(\"try-catch-error\");\nlet lastError                = null;\n\nfunction popError$1()        {\n  if (!lastError) {\n    throw new Error(\"popError may only be called once\");\n  }\n  const { e } = lastError;\n  lastError = null;\n  return e;\n}\n\nlet tryCatch$1                             \n                                          \n                                                         \n                                                                      ;\n\nlet tryCatchResult$1                                               \n                                                            \n                                                                           \n                \n                               \n         \n         \n        \n                              ;\n\n{\n  const throwError = (e       ) => {\n    throw e;\n  };\n\n  tryCatch$1 = (function doTryCatch(f, ...args) {\n    try {\n      f.call(this, ...args);\n    } catch (e) {\n      // See https://github.com/ReactiveX/rxjs/issues/3004#issuecomment-339720668\n      setTimeout(() => { throwError(e); }, 0);\n    }\n  }     );\n\n  tryCatchResult$1 = (function doTryCatchResult(f, ...args) {\n    try {\n      return f.call(this, ...args);\n    } catch (e) {\n      lastError = { e };\n      return symbolError$1;\n    }\n  }     );\n}\n\nvar tryCatch_1 = { tryCatch: tryCatch$1, tryCatchResult: tryCatchResult$1, symbolError: symbolError$1, popError: popError$1 };\n\nconst symbolObservable = require$$0.default;\nconst {\n  tryCatch,\n  tryCatchResult,\n  symbolError,\n  popError\n} = tryCatch_1;\n             \n                     \n                               \n             \n                              \n\n                                                      \n                       \n                             \n                   \n                   \n \n\n                                \n                      \n                   \n \n\n                                                            \n\n                                                \n                                       \n             \n\n                                             \n                                      \n             \n\n                                      \n                                                  \n                              \n                                    \n                         \n  \n\n                                                    \n                                           \n                                           \n \n                                  \n                                                                                \n \n                                           \n                             \n                            \n              \n                \n\n                                                                              \n            \n                                                             \n                                      \n                           \n                   \n \n\n                                                 \n                    \n                        \n\n// Functions to be called within tryCatch().\n\nfunction callNext      (observer                , value   )       {\n  const { next } = observer;\n  if (typeof next === \"function\") {\n    next.call(observer, value);\n  }\n}\n\nfunction callError      (observer                , errorValue   )       {\n  const { error } = observer;\n  if (typeof error === \"function\") {\n    error.call(observer, errorValue);\n  }\n}\n\nfunction callComplete      (observer                )       {\n  const { complete } = observer;\n  if (typeof complete === \"function\") {\n    complete.call(observer);\n  }\n}\n\nfunction callStart      (\n  observer                ,\n  subscription                    \n)       {\n  const { start } = observer;\n  if (typeof start === \"function\") {\n    start.call(observer, subscription);\n  }\n}\n\nfunction callCleanup      (subscription                    ) {\n  const cleanup = subscription._cleanup;\n  if (typeof cleanup === \"function\") {\n    subscription._cleanup = undefined;\n    cleanup();\n  } else if (typeof cleanup === \"object\" && cleanup !== null) {\n    subscription._cleanup = undefined;\n    cleanup.unsubscribe();\n  }\n}\n\nclass SubscriptionObserver              \n                                                                                   {\n                                    \n\n  constructor(subscription                    )       {\n    this._subscription = subscription;\n  }\n\n  next(value   )       {\n    const subscription = this._subscription;\n    const observer = subscription._observer;\n    if (typeof observer === \"undefined\") {\n      return;\n    }\n    tryCatch(callNext, observer, value);\n  }\n\n  error(errorValue   )       {\n    const subscription = this._subscription;\n    const observer = subscription._observer;\n    if (typeof observer === \"undefined\") {\n      return;\n    }\n    subscription._observer = undefined;\n    tryCatch(callError, observer, errorValue);\n    tryCatch(callCleanup, subscription);\n  }\n\n  complete()       {\n    const subscription = this._subscription;\n    const observer = subscription._observer;\n    if (typeof observer === \"undefined\") {\n      return;\n    }\n    subscription._observer = undefined;\n    tryCatch(callComplete, observer);\n    tryCatch(callCleanup, subscription);\n  }\n\n  get closed()          {\n    return typeof this._subscription._observer === \"undefined\";\n  }\n\n  onNext(value   )       {\n    this.next(value);\n  }\n  onError(errorValue   )       {\n    this.error(errorValue);\n  }\n  onCompleted()       {\n    this.complete();\n  }\n  get isStopped()          {\n    return this.closed;\n  }\n}\n\nlet Subscription$1 = class Subscription                                                     {\n                                   \n                    \n\n  constructor(\n    subscriber                              ,\n    observer                \n  )       {\n    this._observer = observer;\n    tryCatch(callStart, observer, this);\n    if (typeof this._observer === \"undefined\") {\n      return;\n    }\n    const subscriptionObserver = new SubscriptionObserver(this);\n    const subscriberResult = tryCatchResult(subscriber, subscriptionObserver);\n    if (subscriberResult === symbolError) {\n      // XXX implies E must always be Error.\n      subscriptionObserver.error((popError()     ));\n      return;\n    }\n    const cleanup          = subscriberResult;\n    if (cleanup === null || typeof cleanup === \"undefined\") {\n      return;\n    }\n    if (typeof cleanup !== \"function\" && typeof cleanup !== \"object\") {\n      throw new TypeError(\n        \"unexpected subscriber result type \" + typeof cleanup\n      );\n    }\n    if (\n      typeof cleanup === \"object\" &&\n      typeof cleanup.unsubscribe !== \"function\"\n    ) {\n      throw new TypeError(\"expected unsubscribe property to be a function\");\n    }\n    this._cleanup = cleanup;\n    if (typeof this._observer === \"undefined\") {\n      tryCatch(callCleanup, this);\n    }\n  }\n\n  unsubscribe()       {\n    const observer = this._observer;\n    if (typeof observer === \"undefined\") {\n      return;\n    }\n    this._observer = undefined;\n    tryCatch(callCleanup, this);\n  }\n\n  get closed()          {\n    return typeof this._observer === \"undefined\";\n  }\n\n  dispose()       {\n    this.unsubscribe();\n  }\n  get isDisposed()          {\n    return this.closed;\n  }\n};\n\nlet EsObservable;\n\nlet BaseObservable$1 = class BaseObservable                                                    {\n                                            \n\n  constructor(subscriber                              )       {\n    if (typeof subscriber !== \"function\") {\n      throw new TypeError(\"Function expected\");\n    }\n    this._subscriber = subscriber;\n  }\n\n  // $FlowFixMe: No symbol or computed property support.\n  [symbolObservable]()                    {\n    return new EsObservable(this._subscriber);\n  }\n\n  // Flow doesn't support returning a differently parameterized this type so\n  // specify types on subclasses instead.\n  pipe(...operators       )      {\n    return this.constructor.from(\n      // $FlowFixMe: No symbol support.\n      operators.reduce((acc, curr) => curr(acc), this[symbolObservable]())\n    );\n  }\n\n  static of(...values     )       {\n    return new this(observer => {\n      for (const value of values) {\n        observer.next(value);\n      }\n      observer.complete();\n    });\n  }\n\n  static from(input                       )       {\n    if (typeof input === \"undefined\" || input === null) {\n      throw new TypeError();\n    }\n\n    if (typeof input === \"object\") {\n      const observableProp                           =\n        // $FlowFixMe: No symbol support.\n        input[symbolObservable];\n      if (typeof observableProp === \"function\") {\n        const observable = observableProp.call(input);\n        if (typeof observable !== \"object\" || observable === null) {\n          throw new TypeError();\n        }\n        if ((observable     ).constructor === this) {\n          return (observable     );\n        }\n        // Avoid additional wrapping between compatible observable implementations.\n        if (observable instanceof BaseObservable) {\n          return new this(observable._subscriber);\n        }\n        return new this(observer => observable.subscribe(observer));\n      }\n      if (typeof input.subscribe === \"function\") {\n        // Not part of ES Observable spec\n        const classic                           = (input     );\n        return new this(observer => {\n          const disposable = classic.subscribe(observer);\n          return () => disposable.dispose();\n        });\n      }\n      if (typeof input.then === \"function\") {\n        // Not part of ES Observable spec\n        const promiseLike                  = (input     );\n        return new this(observer => {\n          promiseLike.then(\n            value => {\n              observer.next(value);\n              observer.complete();\n            },\n            errorValue => {\n              observer.error(errorValue);\n            }\n          );\n        });\n      }\n    }\n\n    // $FlowFixMe: No symbol support.\n    if (typeof input[Symbol.iterator] === \"function\") {\n      return new this(observer => {\n        // $FlowFixMe: No symbol support.\n        for (const value of (input             )) {\n          observer.next(value);\n        }\n        observer.complete();\n      });\n    }\n\n    throw new TypeError();\n  }\n\n  static fromClassicObservable(classic                          )       {\n    return this.from(classic);\n  }\n\n  static empty()       {\n    return new this(observer => {\n      observer.complete();\n    });\n  }\n\n  static throw(errorValue   )       {\n    return new this(observer => {\n      observer.error(errorValue);\n    });\n  }\n\n  static defer(factory                             )       {\n    return new this(observer => {\n      const result = factory();\n      const obs = this.from(result);\n      return new Subscription$1(obs._subscriber, observer);\n    });\n  }\n};\n\n// eslint-disable-next-line no-shadow\nEsObservable = class EsObservable               extends BaseObservable$1      \n                               {\n  subscribe(\n    observerOrOnNext                                        ,\n    onError                          ,\n    onComplete             \n  )                {\n    const observer =\n      typeof observerOrOnNext === \"object\" && observerOrOnNext !== null\n        ? observerOrOnNext\n        : {\n            next: observerOrOnNext,\n            error: onError,\n            complete: onComplete\n          };\n    return new Subscription$1(this._subscriber, observer);\n  }\n\n  // $FlowFixMe: No symbol or computed property support.\n  [symbolObservable]()       {\n    return this;\n  }\n\n  // To pass ES Observable tests these static functions must work without this.\n  static of(...values     )       {\n    const C = typeof this === \"function\" ? this : (EsObservable     );\n    return super.of.call(C, ...values);\n  }\n\n  static from(input                       )       {\n    const C = typeof this === \"function\" ? this : (EsObservable     );\n    return super.from.call(C, input);\n  }\n\n                                    \n                                                                 \n              \n                                      \n                                      \n                               \n                  \n                                      \n                                       \n                                      \n                               \n                      \n                                      \n                                       \n                                       \n                                      \n                               \n                          \n                                      \n                                       \n                                       \n                                       \n                                      \n                               \n                              \n                                      \n                                       \n                                       \n                                       \n                                       \n                                      \n                               \n                                  \n                                      \n                                       \n                                       \n                                       \n                                       \n                                       \n                                      \n                               \n                                      \n                                      \n                                       \n                                       \n                                       \n                                       \n                                       \n                                       \n                                      \n                               \n                                          \n                                      \n                                       \n                                       \n                                       \n                                       \n                                       \n                                       \n                                       \n                                      \n                               \n                                               \n                                      \n                                       \n                                       \n                                       \n                                       \n                                       \n                                       \n                                       \n                                       \n                                        \n                                \n                                                                           \n};\n\nvar esObservable = {\n  BaseObservable: BaseObservable$1,\n  Observable: EsObservable,\n  Subscription: Subscription$1\n};\n\nconst { BaseObservable, Subscription } = esObservable;\n\n                                                        \n\n                              \n                  \n                       \n \n\n                                                             \n                         \n                          \n                      \n                      \n \n\n                                             \n                               \n                                \n                           \n  \n\n                                                   \n            \n                                                          \n                                 \n                            \n                 \n \n\n                                                               \n\n                                                       \n                                              \n                    \n\nclass EsFromClassicObserver               {\n                                   \n  constructor(observer                       )       {\n    this._observer = observer;\n  }\n  next(value   )       {\n    const observer = this._observer;\n    const { onNext } = observer;\n    if (typeof onNext === \"function\") {\n      onNext.call(observer, value);\n    }\n  }\n  error(errorValue   )       {\n    const observer = this._observer;\n    const { onError } = observer;\n    if (typeof onError === \"function\") {\n      onError.call(observer, errorValue);\n    }\n  }\n  complete()       {\n    const observer = this._observer;\n    const { onCompleted } = observer;\n    if (typeof onCompleted === \"function\") {\n      onCompleted.call(observer);\n    }\n  }\n}\n\nclass ClassicObservable               extends BaseObservable      \n                                      {\n  subscribe(\n    observerOrOnNext                                               ,\n    onError                     ,\n    onCompleted             \n  )              {\n    const observer =\n      typeof observerOrOnNext === \"object\" && observerOrOnNext !== null\n        ? new EsFromClassicObserver(observerOrOnNext)\n        : {\n            next: observerOrOnNext,\n            error: onError,\n            complete: onCompleted\n          };\n    return new Subscription(this._subscriber, observer);\n  }\n\n  static create(subscriber                                 )       {\n    const C = typeof this === \"function\" ? this : (ClassicObservable     );\n    if (typeof subscriber !== \"function\") {\n      throw new TypeError(\"Function expected\");\n    }\n    return new C(observer => {\n      const cleanup = subscriber(observer);\n      if (typeof cleanup !== \"object\" || cleanup === null) {\n        return cleanup;\n      }\n      if (typeof cleanup.dispose === \"function\") {\n        return () => {\n          cleanup.dispose();\n        };\n      }\n      // Will cause constructor to throw\n      return ({ unsubscribe: cleanup.dispose }     );\n    });\n  }\n\n                                         \n                                                                      \n              \n                                      \n                                      \n                                    \n                  \n                                      \n                                       \n                                      \n                                    \n                      \n                                      \n                                       \n                                       \n                                      \n                                    \n                          \n                                      \n                                       \n                                       \n                                       \n                                      \n                                    \n                              \n                                      \n                                       \n                                       \n                                       \n                                       \n                                      \n                                    \n                                  \n                                      \n                                       \n                                       \n                                       \n                                       \n                                       \n                                      \n                                    \n                                      \n                                      \n                                       \n                                       \n                                       \n                                       \n                                       \n                                       \n                                      \n                                    \n                                          \n                                      \n                                       \n                                       \n                                       \n                                       \n                                       \n                                       \n                                       \n                                      \n                                    \n                                               \n                                      \n                                       \n                                       \n                                       \n                                       \n                                       \n                                       \n                                       \n                                       \n                                        \n                                     \n                                                                                \n}\n\nvar classicObservable = { Observable: ClassicObservable };\n\nvar Observable = classicObservable.Observable;\n\nexport { Observable };\n", "import { Observable } from '/_ayu/build/deps/falcor-observable.js'\n\n/* eslint-disable functional/no-this-expression, functional/no-class */\nclass ServiceWorkerSource {\n  constructor ({ wake, cache }) {\n    this._inflight = {}\n    this._id = 0 // Identifier used to correlate each Request to each response\n    this._active = 0\n    this._timer\n\n    const init = () => {\n      this._worker = navigator.serviceWorker.controller\n      this._worker?.postMessage(JSON.stringify([-1, 'hello mike']))\n\n      if (cache) {\n        this._worker?.postMessage(JSON.stringify({ cache }))\n      }\n    }\n    if (!this._worker) {\n      init()\n    }\n\n    if (import.meta.hot) {\n      import.meta.hot.on('vite:beforeFullReload', async () => {\n        const reg = await navigator.serviceWorker.getRegistration()\n        // FIXME: maybe needs to wait for activated state event before reloading\n        // registration.active.onstatechange = e => {console.log(e)}\n        // registration.onupdatefound = () => {}\n        // throw 'aborting reload before sw update'\n        reg?.update()\n      })\n    }\n\n    navigator.serviceWorker.addEventListener('message', e => {\n      if (e.data.startsWith('navigate:')) {\n        return\n      }\n      if (!this._worker) {\n        init()\n      }\n      const { id, error, value, done, hello } = JSON.parse(e.data)\n\n      if (hello) {\n        // delete after timeout to not crash a message that was the reason for waking the worker...\n        // TODO: find better solution?\n        setTimeout(() => {\n          Object.values(this._inflight).forEach(stale => stale('service worker restarted, canceled:', stale))\n        }, 800)\n      } else if (typeof this._inflight[id] === 'function') {\n        this._inflight[id](error, value, done)\n      } else {\n        console.log(e.data)\n      }\n    })\n\n    if (wake) {\n      this._waker = setInterval(() => {\n        this._worker?.postMessage(JSON.stringify([-1, 'waky waky']))\n      }, wake)\n    }\n  }\n\n  isActive () {\n    // console.log('isactive', this._timer, Object.keys(this._inflight).length)\n    // Object.keys(this._inflight).length > 1\n    // console.log(this._active)\n    return this._active !== false // this._timer !== null currently only the sync endoint is allowed to run forever\n  }\n\n  get (paths) {\n    return this._getResponse(['get', paths])\n  }\n\n  set (jsonGraphEnvelope) {\n    return this._getResponse(['set', jsonGraphEnvelope])\n  }\n\n  call (callPath, args, pathSuffixes, paths) {\n    return this._getResponse(['call', callPath, args, pathSuffixes, paths])\n  }\n\n  // Creates an observable stream that will send a request\n  // to a Model server, and retrieve the response.\n  // The request and response are correlated using a unique\n  // identifier which the client sends with the request and\n  // the server echoes back along with the response.\n  _getResponse (action) {\n    const id = this._id++\n\n    if (action[1] !== 'call' && action[1][0] !== '_sync') {\n      // console.log('start', action)\n      this._active = this._active ? this._active + 1 : 1\n    }\n\n    return Observable.create(subscriber => {\n      this._inflight[id] = (error, value, done) => {\n        if (error) {\n          console.error([id, ...action])\n          subscriber.onError(error)\n        } else if (done) {\n          subscriber.onCompleted()\n        } else {\n          subscriber.onNext(value)\n        }\n      }\n\n      // FIXME: hanlde error case here to enable trace debugging where request originates console.error([id, ...action])\n\n      this._worker.postMessage(JSON.stringify([id, ...action]))\n\n      return () => {\n        delete this._inflight[id]\n        if (action[1] !== 'call' && action[1][0] !== '_sync') {\n          this._active--\n\n          if (this._timer) {\n            clearTimeout(this._timer)\n          }\n          this._timer = setTimeout(() => {\n            // console.log('finishing', action, this._active)\n            this._timer = null\n            if (this._active === 0) {\n              this._active = false\n            }\n          }, 30)\n        }\n      }\n    })\n  }\n}\n/* eslint-enable functional/no-this-expression, functional/no-class */\n\nexport default ServiceWorkerSource\n"],
  "mappings": ";AAAA,SAAS,sBAAsB,GAAG;AAChC,MAAI,EAAE;AAAY,WAAO;AACzB,MAAI,IAAI,EAAE;AACX,MAAI,OAAO,KAAK,YAAY;AAC3B,QAAI,IAAI,SAASA,KAAK;AACrB,UAAI,gBAAgBA,IAAG;AAClB,eAAO,QAAQ,UAAU,GAAG,WAAW,KAAK,WAAW;AAAA,MAC5D;AACA,aAAO,EAAE,MAAM,MAAM,SAAS;AAAA,IAC/B;AACA,MAAE,YAAY,EAAE;AAAA,EAChB;AAAO,QAAI,CAAC;AACZ,SAAO,eAAe,GAAG,cAAc,EAAC,OAAO,KAAI,CAAC;AACrD,SAAO,KAAK,CAAC,EAAE,QAAQ,SAAU,GAAG;AACnC,QAAI,IAAI,OAAO,yBAAyB,GAAG,CAAC;AAC5C,WAAO,eAAe,GAAG,GAAG,EAAE,MAAM,IAAI;AAAA,MACvC,YAAY;AAAA,MACZ,KAAK,WAAY;AAChB,eAAO,EAAE,CAAC;AAAA,MACX;AAAA,IACD,CAAC;AAAA,EACF,CAAC;AACD,SAAO;AACR;AAEA,SAAS,yBAAyBC,OAAM;AACvC,MAAIC;AACJ,MAAIC,UAASF,MAAK;AAElB,MAAI,OAAOE,YAAW,YAAY;AACjC,QAAIA,QAAO,YAAY;AACtB,MAAAD,UAASC,QAAO;AAAA,IACjB,OAAO;AACN,MAAAD,UAASC,QAAO,YAAY;AAC5B,MAAAA,QAAO,aAAaD;AAAA,IACrB;AAAA,EACD,OAAO;AACN,IAAAA,UAAS;AAAA,EACV;AAEA,SAAOA;AACR;AAIA,IAAI;AAEJ,IAAI,OAAO,SAAS,aAAa;AAC/B,SAAO;AACT,WAAW,OAAO,WAAW,aAAa;AACxC,SAAO;AACT,WAAW,OAAO,WAAW,aAAa;AACxC,SAAO;AACT,WAAW,OAAO,WAAW,aAAa;AACxC,SAAO;AACT,OAAO;AACL,SAAO,SAAS,aAAa,EAAE;AACjC;AAEA,IAAI,SAAS,yBAAyB,IAAI;AAE1C,IAAI,KAAkB,uBAAO,OAAO;AAAA,EACnC,WAAW;AAAA,EACX,SAAS;AACV,CAAC;AAED,IAAI,aAA0B,sCAAsB,EAAE;AAEtD,IAAM,gBAAgB,OAAO,iBAAiB;AAC9C,IAAI,YAA2B;AAE/B,SAAS,aAAoB;AAC3B,MAAI,CAAC,WAAW;AACd,UAAM,IAAI,MAAM,kCAAkC;AAAA,EACpD;AACA,QAAM,EAAE,EAAE,IAAI;AACd,cAAY;AACZ,SAAO;AACT;AAEA,IAAI;AAKJ,IAAI;AAUJ;AACE,QAAM,aAAa,CAAC,MAAa;AAC/B,UAAM;AAAA,EACR;AAEA,eAAc,SAAS,WAAW,MAAM,MAAM;AAC5C,QAAI;AACF,QAAE,KAAK,MAAM,GAAG,IAAI;AAAA,IACtB,SAAS,GAAG;AAEV,iBAAW,MAAM;AAAE,mBAAW,CAAC;AAAA,MAAG,GAAG,CAAC;AAAA,IACxC;AAAA,EACF;AAEA,qBAAoB,SAAS,iBAAiB,MAAM,MAAM;AACxD,QAAI;AACF,aAAO,EAAE,KAAK,MAAM,GAAG,IAAI;AAAA,IAC7B,SAAS,GAAG;AACV,kBAAY,EAAE,EAAE;AAChB,aAAO;AAAA,IACT;AAAA,EACF;AACF;AAEA,IAAI,aAAa,EAAE,UAAU,YAAY,gBAAgB,kBAAkB,aAAa,eAAe,UAAU,WAAW;AAE5H,IAAM,mBAAmB,WAAW;AACpC,IAAM;AAAA,EACJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,IAAI;AA+DJ,SAAS,SAAe,UAA0B,OAAgB;AAChE,QAAM,EAAE,KAAK,IAAI;AACjB,MAAI,OAAO,SAAS,YAAY;AAC9B,SAAK,KAAK,UAAU,KAAK;AAAA,EAC3B;AACF;AAEA,SAAS,UAAgB,UAA0B,YAAqB;AACtE,QAAM,EAAE,MAAM,IAAI;AAClB,MAAI,OAAO,UAAU,YAAY;AAC/B,UAAM,KAAK,UAAU,UAAU;AAAA,EACjC;AACF;AAEA,SAAS,aAAmB,UAAgC;AAC1D,QAAM,EAAE,SAAS,IAAI;AACrB,MAAI,OAAO,aAAa,YAAY;AAClC,aAAS,KAAK,QAAQ;AAAA,EACxB;AACF;AAEA,SAAS,UACP,UACA,cACM;AACN,QAAM,EAAE,MAAM,IAAI;AAClB,MAAI,OAAO,UAAU,YAAY;AAC/B,UAAM,KAAK,UAAU,YAAY;AAAA,EACnC;AACF;AAEA,SAAS,YAAkB,cAAkC;AAC3D,QAAM,UAAU,aAAa;AAC7B,MAAI,OAAO,YAAY,YAAY;AACjC,iBAAa,WAAW;AACxB,YAAQ;AAAA,EACV,WAAW,OAAO,YAAY,YAAY,YAAY,MAAM;AAC1D,iBAAa,WAAW;AACxB,YAAQ,YAAY;AAAA,EACtB;AACF;AAEA,IAAM,uBAAN,MACmF;AAAA,EAGjF,YAAY,cAAwC;AAClD,SAAK,gBAAgB;AAAA,EACvB;AAAA,EAEA,KAAK,OAAgB;AACnB,UAAM,eAAe,KAAK;AAC1B,UAAM,WAAW,aAAa;AAC9B,QAAI,OAAO,aAAa,aAAa;AACnC;AAAA,IACF;AACA,aAAS,UAAU,UAAU,KAAK;AAAA,EACpC;AAAA,EAEA,MAAM,YAAqB;AACzB,UAAM,eAAe,KAAK;AAC1B,UAAM,WAAW,aAAa;AAC9B,QAAI,OAAO,aAAa,aAAa;AACnC;AAAA,IACF;AACA,iBAAa,YAAY;AACzB,aAAS,WAAW,UAAU,UAAU;AACxC,aAAS,aAAa,YAAY;AAAA,EACpC;AAAA,EAEA,WAAiB;AACf,UAAM,eAAe,KAAK;AAC1B,UAAM,WAAW,aAAa;AAC9B,QAAI,OAAO,aAAa,aAAa;AACnC;AAAA,IACF;AACA,iBAAa,YAAY;AACzB,aAAS,cAAc,QAAQ;AAC/B,aAAS,aAAa,YAAY;AAAA,EACpC;AAAA,EAEA,IAAI,SAAkB;AACpB,WAAO,OAAO,KAAK,cAAc,cAAc;AAAA,EACjD;AAAA,EAEA,OAAO,OAAgB;AACrB,SAAK,KAAK,KAAK;AAAA,EACjB;AAAA,EACA,QAAQ,YAAqB;AAC3B,SAAK,MAAM,UAAU;AAAA,EACvB;AAAA,EACA,cAAoB;AAClB,SAAK,SAAS;AAAA,EAChB;AAAA,EACA,IAAI,YAAqB;AACvB,WAAO,KAAK;AAAA,EACd;AACF;AAEA,IAAI,iBAAiB,MAAM,aAAiE;AAAA,EAI1F,YACE,YACA,UACM;AACN,SAAK,YAAY;AACjB,aAAS,WAAW,UAAU,IAAI;AAClC,QAAI,OAAO,KAAK,cAAc,aAAa;AACzC;AAAA,IACF;AACA,UAAM,uBAAuB,IAAI,qBAAqB,IAAI;AAC1D,UAAM,mBAAmB,eAAe,YAAY,oBAAoB;AACxE,QAAI,qBAAqB,aAAa;AAEpC,2BAAqB,MAAO,SAAS,CAAO;AAC5C;AAAA,IACF;AACA,UAAM,UAAmB;AACzB,QAAI,YAAY,QAAQ,OAAO,YAAY,aAAa;AACtD;AAAA,IACF;AACA,QAAI,OAAO,YAAY,cAAc,OAAO,YAAY,UAAU;AAChE,YAAM,IAAI;AAAA,QACR,uCAAuC,OAAO;AAAA,MAChD;AAAA,IACF;AACA,QACE,OAAO,YAAY,YACnB,OAAO,QAAQ,gBAAgB,YAC/B;AACA,YAAM,IAAI,UAAU,gDAAgD;AAAA,IACtE;AACA,SAAK,WAAW;AAChB,QAAI,OAAO,KAAK,cAAc,aAAa;AACzC,eAAS,aAAa,IAAI;AAAA,IAC5B;AAAA,EACF;AAAA,EAEA,cAAoB;AAClB,UAAM,WAAW,KAAK;AACtB,QAAI,OAAO,aAAa,aAAa;AACnC;AAAA,IACF;AACA,SAAK,YAAY;AACjB,aAAS,aAAa,IAAI;AAAA,EAC5B;AAAA,EAEA,IAAI,SAAkB;AACpB,WAAO,OAAO,KAAK,cAAc;AAAA,EACnC;AAAA,EAEA,UAAgB;AACd,SAAK,YAAY;AAAA,EACnB;AAAA,EACA,IAAI,aAAsB;AACxB,WAAO,KAAK;AAAA,EACd;AACF;AAEA,IAAI;AAEJ,IAAI,mBAAmB,MAAM,eAAkE;AAAA,EAG7F,YAAY,YAAgD;AAC1D,QAAI,OAAO,eAAe,YAAY;AACpC,YAAM,IAAI,UAAU,mBAAmB;AAAA,IACzC;AACA,SAAK,cAAc;AAAA,EACrB;AAAA;AAAA,EAGA,CAAC,gBAAgB,IAAuB;AACtC,WAAO,IAAI,aAAa,KAAK,WAAW;AAAA,EAC1C;AAAA;AAAA;AAAA,EAIA,QAAQ,WAAuB;AAC7B,WAAO,KAAK,YAAY;AAAA;AAAA,MAEtB,UAAU,OAAO,CAAC,KAAK,SAAS,KAAK,GAAG,GAAG,KAAK,gBAAgB,EAAE,CAAC;AAAA,IACrE;AAAA,EACF;AAAA,EAEA,OAAO,MAAM,QAAmB;AAC9B,WAAO,IAAI,KAAK,cAAY;AAC1B,iBAAW,SAAS,QAAQ;AAC1B,iBAAS,KAAK,KAAK;AAAA,MACrB;AACA,eAAS,SAAS;AAAA,IACpB,CAAC;AAAA,EACH;AAAA,EAEA,OAAO,KAAK,OAAoC;AAC9C,QAAI,OAAO,UAAU,eAAe,UAAU,MAAM;AAClD,YAAM,IAAI,UAAU;AAAA,IACtB;AAEA,QAAI,OAAO,UAAU,UAAU;AAC7B,YAAM;AAAA;AAAA,QAEJ,MAAM,gBAAgB;AAAA;AACxB,UAAI,OAAO,mBAAmB,YAAY;AACxC,cAAM,aAAa,eAAe,KAAK,KAAK;AAC5C,YAAI,OAAO,eAAe,YAAY,eAAe,MAAM;AACzD,gBAAM,IAAI,UAAU;AAAA,QACtB;AACA,YAAK,WAAiB,gBAAgB,MAAM;AAC1C,iBAAQ;AAAA,QACV;AAEA,YAAI,sBAAsB,gBAAgB;AACxC,iBAAO,IAAI,KAAK,WAAW,WAAW;AAAA,QACxC;AACA,eAAO,IAAI,KAAK,cAAY,WAAW,UAAU,QAAQ,CAAC;AAAA,MAC5D;AACA,UAAI,OAAO,MAAM,cAAc,YAAY;AAEzC,cAAM,UAAqC;AAC3C,eAAO,IAAI,KAAK,cAAY;AAC1B,gBAAM,aAAa,QAAQ,UAAU,QAAQ;AAC7C,iBAAO,MAAM,WAAW,QAAQ;AAAA,QAClC,CAAC;AAAA,MACH;AACA,UAAI,OAAO,MAAM,SAAS,YAAY;AAEpC,cAAM,cAAgC;AACtC,eAAO,IAAI,KAAK,cAAY;AAC1B,sBAAY;AAAA,YACV,WAAS;AACP,uBAAS,KAAK,KAAK;AACnB,uBAAS,SAAS;AAAA,YACpB;AAAA,YACA,gBAAc;AACZ,uBAAS,MAAM,UAAU;AAAA,YAC3B;AAAA,UACF;AAAA,QACF,CAAC;AAAA,MACH;AAAA,IACF;AAGA,QAAI,OAAO,MAAM,OAAO,QAAQ,MAAM,YAAY;AAChD,aAAO,IAAI,KAAK,cAAY;AAE1B,mBAAW,SAAU,OAAqB;AACxC,mBAAS,KAAK,KAAK;AAAA,QACrB;AACA,iBAAS,SAAS;AAAA,MACpB,CAAC;AAAA,IACH;AAEA,UAAM,IAAI,UAAU;AAAA,EACtB;AAAA,EAEA,OAAO,sBAAsB,SAAyC;AACpE,WAAO,KAAK,KAAK,OAAO;AAAA,EAC1B;AAAA,EAEA,OAAO,QAAc;AACnB,WAAO,IAAI,KAAK,cAAY;AAC1B,eAAS,SAAS;AAAA,IACpB,CAAC;AAAA,EACH;AAAA,EAEA,OAAO,MAAM,YAAqB;AAChC,WAAO,IAAI,KAAK,cAAY;AAC1B,eAAS,MAAM,UAAU;AAAA,IAC3B,CAAC;AAAA,EACH;AAAA,EAEA,OAAO,MAAM,SAA4C;AACvD,WAAO,IAAI,KAAK,cAAY;AAC1B,YAAMA,UAAS,QAAQ;AACvB,YAAM,MAAM,KAAK,KAAKA,OAAM;AAC5B,aAAO,IAAI,eAAe,IAAI,aAAa,QAAQ;AAAA,IACrD,CAAC;AAAA,EACH;AACF;AAGA,eAAe,MAAME,sBAAmC,iBACzB;AAAA,EAC7B,UACE,kBACA,SACA,YACe;AACf,UAAM,WACJ,OAAO,qBAAqB,YAAY,qBAAqB,OACzD,mBACA;AAAA,MACE,MAAM;AAAA,MACN,OAAO;AAAA,MACP,UAAU;AAAA,IACZ;AACN,WAAO,IAAI,eAAe,KAAK,aAAa,QAAQ;AAAA,EACtD;AAAA;AAAA,EAGA,CAAC,gBAAgB,IAAU;AACzB,WAAO;AAAA,EACT;AAAA;AAAA,EAGA,OAAO,MAAM,QAAmB;AAC9B,UAAM,IAAI,OAAO,SAAS,aAAa,OAAQA;AAC/C,WAAO,MAAM,GAAG,KAAK,GAAG,GAAG,MAAM;AAAA,EACnC;AAAA,EAEA,OAAO,KAAK,OAAoC;AAC9C,UAAM,IAAI,OAAO,SAAS,aAAa,OAAQA;AAC/C,WAAO,MAAM,KAAK,KAAK,GAAG,KAAK;AAAA,EACjC;AA6EF;AAEA,IAAI,eAAe;AAAA,EACjB,gBAAgB;AAAA,EAChB,YAAY;AAAA,EACZ,cAAc;AAChB;AAEA,IAAM,EAAE,gBAAAC,iBAAgB,cAAAC,cAAa,IAAI;AAoCzC,IAAM,wBAAN,MAA0C;AAAA,EAExC,YAAY,UAAuC;AACjD,SAAK,YAAY;AAAA,EACnB;AAAA,EACA,KAAK,OAAgB;AACnB,UAAM,WAAW,KAAK;AACtB,UAAM,EAAE,OAAO,IAAI;AACnB,QAAI,OAAO,WAAW,YAAY;AAChC,aAAO,KAAK,UAAU,KAAK;AAAA,IAC7B;AAAA,EACF;AAAA,EACA,MAAM,YAAqB;AACzB,UAAM,WAAW,KAAK;AACtB,UAAM,EAAE,QAAQ,IAAI;AACpB,QAAI,OAAO,YAAY,YAAY;AACjC,cAAQ,KAAK,UAAU,UAAU;AAAA,IACnC;AAAA,EACF;AAAA,EACA,WAAiB;AACf,UAAM,WAAW,KAAK;AACtB,UAAM,EAAE,YAAY,IAAI;AACxB,QAAI,OAAO,gBAAgB,YAAY;AACrC,kBAAY,KAAK,QAAQ;AAAA,IAC3B;AAAA,EACF;AACF;AAEA,IAAM,oBAAN,MAAM,2BAAwCD,gBACR;AAAA,EACpC,UACE,kBACA,SACA,aACa;AACb,UAAM,WACJ,OAAO,qBAAqB,YAAY,qBAAqB,OACzD,IAAI,sBAAsB,gBAAgB,IAC1C;AAAA,MACE,MAAM;AAAA,MACN,OAAO;AAAA,MACP,UAAU;AAAA,IACZ;AACN,WAAO,IAAIC,cAAa,KAAK,aAAa,QAAQ;AAAA,EACpD;AAAA,EAEA,OAAO,OAAO,YAAmD;AAC/D,UAAM,IAAI,OAAO,SAAS,aAAa,OAAQ;AAC/C,QAAI,OAAO,eAAe,YAAY;AACpC,YAAM,IAAI,UAAU,mBAAmB;AAAA,IACzC;AACA,WAAO,IAAI,EAAE,cAAY;AACvB,YAAM,UAAU,WAAW,QAAQ;AACnC,UAAI,OAAO,YAAY,YAAY,YAAY,MAAM;AACnD,eAAO;AAAA,MACT;AACA,UAAI,OAAO,QAAQ,YAAY,YAAY;AACzC,eAAO,MAAM;AACX,kBAAQ,QAAQ;AAAA,QAClB;AAAA,MACF;AAEA,aAAQ,EAAE,aAAa,QAAQ,QAAQ;AAAA,IACzC,CAAC;AAAA,EACH;AA6EF;AAEA,IAAI,oBAAoB,EAAE,YAAY,kBAAkB;AAExD,IAAI,aAAa,kBAAkB;;;ACjwBnC,IAAM,sBAAN,MAA0B;AAAA,EACxB,YAAa,EAAE,MAAM,MAAM,GAAG;AAC5B,SAAK,YAAY,CAAC;AAClB,SAAK,MAAM;AACX,SAAK,UAAU;AACf,SAAK;AAEL,UAAM,OAAO,MAAM;AACjB,WAAK,UAAU,UAAU,cAAc;AACvC,WAAK,SAAS,YAAY,KAAK,UAAU,CAAC,IAAI,YAAY,CAAC,CAAC;AAE5D,UAAI,OAAO;AACT,aAAK,SAAS,YAAY,KAAK,UAAU,EAAE,MAAM,CAAC,CAAC;AAAA,MACrD;AAAA,IACF;AACA,QAAI,CAAC,KAAK,SAAS;AACjB,WAAK;AAAA,IACP;AAEA,QAAI,YAAY,KAAK;AACnB,kBAAY,IAAI,GAAG,yBAAyB,YAAY;AACtD,cAAM,MAAM,MAAM,UAAU,cAAc,gBAAgB;AAK1D,aAAK,OAAO;AAAA,MACd,CAAC;AAAA,IACH;AAEA,cAAU,cAAc,iBAAiB,WAAW,OAAK;AACvD,UAAI,EAAE,KAAK,WAAW,WAAW,GAAG;AAClC;AAAA,MACF;AACA,UAAI,CAAC,KAAK,SAAS;AACjB,aAAK;AAAA,MACP;AACA,YAAM,EAAE,IAAI,OAAO,OAAO,MAAM,MAAM,IAAI,KAAK,MAAM,EAAE,IAAI;AAE3D,UAAI,OAAO;AAGT,mBAAW,MAAM;AACf,iBAAO,OAAO,KAAK,SAAS,EAAE,QAAQ,WAAS,MAAM,uCAAuC,KAAK,CAAC;AAAA,QACpG,GAAG,GAAG;AAAA,MACR,WAAW,OAAO,KAAK,UAAU,EAAE,MAAM,YAAY;AACnD,aAAK,UAAU,EAAE,EAAE,OAAO,OAAO,IAAI;AAAA,MACvC,OAAO;AACL,gBAAQ,IAAI,EAAE,IAAI;AAAA,MACpB;AAAA,IACF,CAAC;AAED,QAAI,MAAM;AACR,WAAK,SAAS,YAAY,MAAM;AAC9B,aAAK,SAAS,YAAY,KAAK,UAAU,CAAC,IAAI,WAAW,CAAC,CAAC;AAAA,MAC7D,GAAG,IAAI;AAAA,IACT;AAAA,EACF;AAAA,EAEA,WAAY;AAIV,WAAO,KAAK,YAAY;AAAA,EAC1B;AAAA,EAEA,IAAK,OAAO;AACV,WAAO,KAAK,aAAa,CAAC,OAAO,KAAK,CAAC;AAAA,EACzC;AAAA,EAEA,IAAK,mBAAmB;AACtB,WAAO,KAAK,aAAa,CAAC,OAAO,iBAAiB,CAAC;AAAA,EACrD;AAAA,EAEA,KAAM,UAAU,MAAM,cAAc,OAAO;AACzC,WAAO,KAAK,aAAa,CAAC,QAAQ,UAAU,MAAM,cAAc,KAAK,CAAC;AAAA,EACxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,aAAc,QAAQ;AACpB,UAAM,KAAK,KAAK;AAEhB,QAAI,OAAO,CAAC,MAAM,UAAU,OAAO,CAAC,EAAE,CAAC,MAAM,SAAS;AAEpD,WAAK,UAAU,KAAK,UAAU,KAAK,UAAU,IAAI;AAAA,IACnD;AAEA,WAAO,WAAW,OAAO,gBAAc;AACrC,WAAK,UAAU,EAAE,IAAI,CAAC,OAAO,OAAO,SAAS;AAC3C,YAAI,OAAO;AACT,kBAAQ,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC;AAC7B,qBAAW,QAAQ,KAAK;AAAA,QAC1B,WAAW,MAAM;AACf,qBAAW,YAAY;AAAA,QACzB,OAAO;AACL,qBAAW,OAAO,KAAK;AAAA,QACzB;AAAA,MACF;AAIA,WAAK,QAAQ,YAAY,KAAK,UAAU,CAAC,IAAI,GAAG,MAAM,CAAC,CAAC;AAExD,aAAO,MAAM;AACX,eAAO,KAAK,UAAU,EAAE;AACxB,YAAI,OAAO,CAAC,MAAM,UAAU,OAAO,CAAC,EAAE,CAAC,MAAM,SAAS;AACpD,eAAK;AAEL,cAAI,KAAK,QAAQ;AACf,yBAAa,KAAK,MAAM;AAAA,UAC1B;AACA,eAAK,SAAS,WAAW,MAAM;AAE7B,iBAAK,SAAS;AACd,gBAAI,KAAK,YAAY,GAAG;AACtB,mBAAK,UAAU;AAAA,YACjB;AAAA,UACF,GAAG,EAAE;AAAA,QACP;AAAA,MACF;AAAA,IACF,CAAC;AAAA,EACH;AACF;AAGA,IAAO,gCAAQ;",
  "names": ["a", "root", "result", "Symbol", "EsObservable", "BaseObservable", "Subscription"]
}
