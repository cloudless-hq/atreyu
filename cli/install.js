import versions from './versions.json' assert { type: 'json' }
const { ayuVersion } = versions

const denoHome = Deno.env.get('DENO_HOME') || Deno.env.get('HOME') + '/.deno'

// FIXME: ayu update installs new cli with old script and old permissions!
export function install (newAyuVersion, localOverride, repoOverride) {
  const permissions = [
    '--allow-read=./,\`command -v deno\`,$DENO_DIR/',
    '--allow-env=HOME,DENO_DIR,DENO_HOME,ESBUILD_BINARY_PATH',
    '--allow-hrtime',
    '--allow-net=atreyu.dev,127.0.0.1:5001,127.0.0.1:8080,localhost,api.cloudflare.com,api.pinata.cloud,registry.npmjs.org,deno.land',
    '--allow-run=kill,yarn,pnpm,ipfs,\`command -v deno\`,"$HOME"/Library/Caches/esbuild/bin/esbuild-darwin-arm64@0.15.17,"$HOME"/Library/Caches/esbuild/bin/esbuild-darwin-amd64@0.15.17',
    `--allow-write="$TMPDIR","$DENO_DIR"/,"$HOME"/${repoOverride || '.atreyu'},./`,
    '--no-check',
    '--unstable'
  ]

  const modPath = localOverride || `https://atreyu.dev/ayu@${newAyuVersion}/cli/mod.js`

  const cmdName = localOverride ? 'ayudev' : 'ayu'

  const runCommand = `#!/bin/sh
# generated by ayu

exec deno run ${permissions.join(' \\\n')} '${modPath}${repoOverride ? ' --repo=' + Deno.env.get('HOME') + '/' + repoOverride : ''}' "$@"
`
  Deno.writeTextFileSync(denoHome + '/bin/' + cmdName, runCommand, { mode: 0o755 })
  // TODO: execute and fetch dependencies

  console.log(`\nInstalled ayu script ${modPath} with following permissions:\n` + permissions.join(' \n'))
}

if (import.meta.main) {
  let localOverride
  let repoOverride
  if (import.meta.url.startsWith('file://')) {
    localOverride = import.meta.url.replace('file://', '').replace('/install.js', '/mod.js')
    repoOverride = '.atreyu_dev'
  }
  console.log('installing ayu cli ' + ayuVersion + ' ...')
  install(ayuVersion, localOverride, repoOverride)
}
